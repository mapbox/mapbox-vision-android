apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: "de.mannodermaus.android-junit5"

apply from: "../gradle/versions.gradle"
apply from: "../gradle/utils.gradle"
apply from: "../gradle/ktlint.gradle"

if (booleanProjectOrLocalProperty('PUBLISH_CORE')) {
    // publishing
    apply from: "../gradle/bintray.gradle"

    // documentation
    apply plugin: 'org.jetbrains.dokka-android'
    dokka {
        moduleName = 'mapbox-vision'
        outputDirectory = "$buildDir/javadoc"
        outputFormat = 'javadoc'
        kotlinTasks {
            defaultKotlinTasks() + [':CoreSdk:compileReleaseKotlin']
        }

        packageOptions {
            prefix = "com.mapbox.vision.telemetry"
            suppress = true
        }
        packageOptions {
            prefix = "com.mapbox.vision.utils"
            suppress = true
        }
        packageOptions {
            prefix = "com.mapbox.vision.sensors"
            suppress = true
        }
        packageOptions {
            prefix = "com.mapbox.vision.location"
            suppress = true
        }
        packageOptions {
            prefix = "com.mapbox.vision"
            suppress = false
        }
        packageOptions {
            prefix = "com.mapbox.vision.mobile.core"
            suppress = true
        }
        packageOptions {
            prefix = "com.mapbox.vision.mobile.core.interfaces"
            suppress = false
        }
        packageOptions {
            prefix = "com.mapbox.vision.mobile.core.models"
            suppress = false
        }
    }
}

android {
    buildToolsVersion build_tools_version
    compileSdkVersion compile_sdk_version

    defaultConfig {
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionName project.property('versionName')

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    testOptions {
        junitPlatform {
            filters {
                engines {
                    include 'spek2'
                }
            }
        }
    }
}

dependencies {
    testImplementation "org.spekframework.spek2:spek-dsl-jvm:$spek_version"
    testImplementation "org.spekframework.spek2:spek-runner-junit5:$spek_version"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_5_version"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:$junit_5_version"
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    ktlint "com.pinterest:ktlint:$ktlint_version"

    if (booleanProjectOrLocalProperty('BUILD_CORE_FROM_SOURCE')) {
        api project(path: ':CoreSdk')
    } else {
        api "com.mapbox.vision:mapbox-android-vision-native:$vision_native"
    }

    api "com.mapbox.mapboxsdk:mapbox-android-core:$mapbox_core"
    // don't use telemetry 4.5.1
    // https://github.com/mapbox/mapbox-navigation-android/issues/1984
    api "com.mapbox.mapboxsdk:mapbox-android-telemetry:$mapbox_telemetry"
}

tasks.withType(Javadoc).all {
    enabled = false
}
