apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

apply from: "../gradle/versions.gradle"
apply from: "../gradle/utils.gradle"
apply from: "../gradle/ktlint.gradle"

if (booleanProjectOrLocalProperty('PUBLISH_CORE')) {
    // publishing
    apply from: "../gradle/bintray.gradle"

    // documentation
    apply plugin: 'org.jetbrains.dokka-android'
    dokka {
        moduleName = 'mapbox-vision-ar'
        outputDirectory = "$buildDir/javadoc"
        outputFormat = 'javadoc'

        kotlinTasks {
            defaultKotlinTasks() + [':CoreAr:compileReleaseKotlin']
        }

        packageOptions {
            prefix = "com.mapbox.vision.ar.core"
            suppress = true
        }
        packageOptions {
            prefix = "com.mapbox.vision.ar.view.gl"
            suppress = false
        }
        packageOptions {
            prefix = "com.mapbox.vision.ar.core.models"
            suppress = false
        }
    }
}

android {
    buildToolsVersion build_tools_version
    compileSdkVersion compile_sdk_version
    defaultConfig {
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionName project.property('versionName')
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    ktlint "com.pinterest:ktlint:$ktlint_version"

    if (booleanProjectOrLocalProperty('BUILD_CORE_FROM_SOURCE')) {
        api  project(path: ':CoreSdk')
        api  project(path: ':Vision')
        api  project(path: ':CoreAr')
    } else {
        api "com.mapbox.vision:mapbox-android-vision:$vision_native"
        api "com.mapbox.vision:mapbox-android-vision-ar-native:$vision_native"
    }
}

tasks.withType(Javadoc).all {
    enabled = false
}
